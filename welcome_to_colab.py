# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb

<div class="markdown-google-sans">
  <h1>Welcome to Colab!</h1>
</div>

<div class="markdown-google-sans">
  <h2>Explore the Gemini API</h2>
  <p>The Gemini API gives you access to Gemini models created by Google DeepMind. Gemini models are built from the ground up to be multimodal, so you can reason seamlessly across text, images, code, and audio.
  </p>
  <strong>How to get started</strong>
    <ol>
      <li>Go to <a href="https://aistudio.google.com/">Google AI Studio</a> and log in with your Google account.</li>
      <li><a href="https://aistudio.google.com/app/apikey">Create an API key</a>.</li>
      <li>Use a quickstart for <a href="https://colab.research.google.com/github/google-gemini/cookbook/blob/main/quickstarts/Prompting.ipynb">Python</a>, or call the REST API using <a href="https://colab.research.google.com/github/google-gemini/cookbook/blob/main/quickstarts/rest/Prompting_REST.ipynb">curl</a>.</li>
      </ol>
  <strong>Explore use cases</strong>
    <ul>
      <li><a href="https://colab.research.google.com/github/google-gemini/cookbook/blob/main/examples/Market_a_Jet_Backpack.ipynb">Create a marketing campaign</a></li>
      <li><a href="https://colab.research.google.com/github/google-gemini/cookbook/blob/main/quickstarts/Audio.ipynb">Analyze audio recordings</a></li>
      <li><a href="https://colab.research.google.com/github/google-gemini/cookbook/blob/main/quickstarts/System_instructions.ipynb">Use System instructions in chat</a></li>
    </ul>
  <p>To learn more, check out the <a href="https://github.com/google-gemini/cookbook">Gemini cookbook</a> or visit the <a href="https://ai.google.dev/docs/">Gemini API documentation</a>.
  </p>
</div>
"""

import os
HOME= os.getcwd()
print(HOME)

!pip install ultralytics==8.0.20
from IPython import display
display.clear_output()

import ultralytics
ultralytics.checks()

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
!yolo task=detect mode=predict model=yolov8n.pt conf=0.25 source='https://media.roboflow.com/notebooks/examples/dog.jpeg' save=True  # to check YOLO WORKS OR NOT 


# connect to google drive to get zip file 
from google.colab import drive
drive.mount('/content/gdrive')
!ln -s /content/gdrive/My\ Drive/ /mydrive
!ls /mydrive

# make dir datasets in HOME dir 
# Commented out IPython magic to ensure Python compatibility.
!mkdir {HOME}/datasets
# %cd {HOME}/datasets

# extracting all the files inside zipped folder "freedomtech" which named modelImages later
!unzip /content/gdrive/MyDrive/freedomtech.zip

import os

# Path to the directory containing label files
label_directory = '/content/datasets/freedomtech/labels/validation'

# Iterate through all files in the directory
for filename in os.listdir(label_directory):
    # Check if the file is a .txt file
    if filename.endswith('.txt'):
        file_path = os.path.join(label_directory, filename)

        # Read the content of the label file
        with open(file_path, 'r') as file:
            lines = file.readlines()

        # Replace class ID 15 with 0 because we need only one class in labelimages but by default there are so many classes and our class index is 15 so need to change 
        updated_lines = [line.replace('15', '0', 1) for line in lines]  # Replace only the first occurrence

        # Write the updated content back to the label file
        with open(file_path, 'w') as file:
            file.writelines(updated_lines)

print("Class ID replacement completed.")

pip install --upgrade albumentations

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}



!yolo task=detect mode=train model=yolov8s.pt data=/content/datasets/freedomtech/data.yaml epochs=100 imgsz=800 plots=True

